org: richie457
app: richie-app
service: richie-app
frameworkVersion: "3"
plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-plugin-tracing
  - serverless-plugin-aws-alerts
  - serverless-plugin-metric
custom:
  tableName: "users-table-${sls:stage}"
  metrics:
    - name: AppLevelMetrics
      pattern: "{ $.statusCode != 200 }"
  alerts:
    stages:
      - dev
    topics:
      alarm:
        topic: ${self:provider.stage}-alerts-alarm
        notifications:
          - protocol: email
            endpoint: beastar457@gmail.com
    alarms:
      - functionErrors
      - functionThrottles
provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: "20201221"
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  tracing:
    lambda: true
    apiGateway: true
  environment:
    USERS_TABLE: ${self:custom.tableName}
    TODOS_TABLE: Todos-${self:provider.stage}
    TODOS_CREATED_AT_INDEX: CreatedAtIndex
    ATTACHMENT_S3_BUCKET: serverless-c4-todo-images-${self:provider.stage}
    SIGNED_URL_EXPIRATION: 300
  logs:
    # Enable API Gateway logs
    RestApiLogs: true

functions:
  Auth:
    handler: src/lambda/auth/auth0Authorizer.handler
  GetTodos:
    handler: src/lambda/http/getTodos.handler
    tracing: "true" # overrides provider settings (opt out)
    events:
      - http:
          method: get
          path: todos
          cors: true
          authorizer: Auth

    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource:
          - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}
          - "*"
  CreateTodo:
    handler: src/lambda/http/createTodo.handler
    tracing: "true" # overrides provider settings (opt out)
    events:
      - http:
          method: post
          path: todos
          request:
            schemas:
              application/json: ${file(models/create-todo-model.json)}
          authorizer: Auth
          cors: true

    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutObject
          - dynamodb:PutItem
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource:
          - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}
          - "*"

  UpdateTodo:
    handler: src/lambda/http/updateTodo.handler
    tracing: "true" # overrides provider settings (opt out)
    events:
      - http:
          method: patch
          path: todos/{todoId}
          request:
            schemas:
              application/json: ${file(models/update-todo-model.json)}
          cors: true
          authorizer: Auth

    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource:
          - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}
          - "*"
  DeleteTodo:
    handler: src/lambda/http/deleteTodo.handler
    tracing: "true" # overrides provider settings (opt out)
    events:
      - http:
          method: delete
          path: todos/{todoId}
          cors: true

    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource:
          - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}
          - "*"
  GenerateUploadUrl:
    handler: src/lambda/http/generateUploadUrl.handler
    tracing: "true" # overrides provider settings (opt out)
    events:
      - http:
          method: post
          path: todos/attachment
          cors: true
          authorizer: Auth

    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutObject
          - dynamodb:PutItem
          - dynamodb:Query
          - dynamodb:UpdateItem
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource:
          - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}
          - "*"

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"
    TodosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: refKey
            AttributeType: S
          - AttributeName: todoId
            AttributeType: S
        KeySchema:
          - AttributeName: refKey
            KeyType: HASH
          - AttributeName: todoId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.TODOS_TABLE}
        LocalSecondaryIndexes:
          - IndexName: ${self:provider.environment.TODOS_CREATED_AT_INDEX}
            KeySchema:
              - AttributeName: refKey
                KeyType: HASH
              - AttributeName: todoId
                KeyType: RANGE
            Projection:
              ProjectionType: ALL # What attributes will be copied to an index
    AttachmentsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: attachementseou7xk8j16a4
        # AccessControl: PublicRead
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              AllowedOrigins:
                - "*"
              MaxAge: 3000

    UploadRole:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref AttachmentsBucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Action:
                - "s3:GetObject"
                - "s3:PutObjectAcl"
                - "s3:PutObject"
              Effect: Allow
              Resource: !Join
                - ""
                - - "arn:aws:s3:::"
                  - !Ref AttachmentsBucket
                  - /*
              Principal: "*"
